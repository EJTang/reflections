What happens when you initialize a repository? Why do you need to do it?
It opens a empty git repository. We need to do this in order to actually track our files and have a repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?
the staging area is the area you place the files that have changed in the working directory and that you want to update into the repository. Any changes made in the working directory and not placed in the staging area will not be added to the repository. This will allow us to add certain parts that would make a logical change if we were to have several parts that we created.

How can you use the staging area to make sure you have one commit per logical change?
you can add certain files to the staging area. Anything in the staging area will be added to the commit and anything that is not will not be in the new commit.
This will allow us to only add files that were part of the logical change, and split our one edit into several parts if necessary.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
this allows us to make bigger changes to our code while having a working version in case anything goes wrong. This is good for new features or different versions of something you want to try out.

How do the diagrams help you visualize the branch structure?
Diagrams help us visualize the branch structure because it allows us to see where things branch out from each other and at what points were changes made.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
it will combine the differences in the files and will take the changes made in the two branches. This will add new features made or fix bugs that were existent before.
We represent it that way because it is where two files will converge and make a single working file.







